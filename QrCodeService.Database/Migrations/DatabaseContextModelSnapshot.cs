// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;


#nullable disable

namespace QrCodeService.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("QrCodeService.Domain.Entity.HubRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Unique ID");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Creation time");

                    b.Property<string>("TransportInvoiceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("Waybill in hub");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Time updated");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("Id given by the hub");

                    b.HasKey("Id");

                    b.ToTable("HubRoute", "public", t =>
                        {
                            t.HasComment("Route given by the hub");
                        });
                });

            modelBuilder.Entity("QrCodeService.Domain.Entity.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Unique ID");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Time creation");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Request body");

                    b.Property<int>("RouteId")
                        .HasColumnType("integer")
                        .HasComment("Route ID");

                    b.Property<string>("OperatorMessageId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("ID given by the operator to the sent request");

                    b.Property<string>("Result")
                        .HasColumnType("text")
                        .HasComment("The result of executing a request to the hub.Contains a response or error.");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasComment("Event state.0-sent;1-sent message;2-еггог handle;");

                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasComment("Article Id");

                    b.Property<string>("ArticleType")
                        .HasColumnType("text")
                        .HasComment("Article Type");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Time update");

                    b.HasKey("Id");

                    b.ToTable("Messages", "public", t =>
                        {
                            t.HasComment("Store requests");
                        });
                });

            modelBuilder.Entity("QrCodeService.Domain.Entity.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Unique ID");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("File name");

                    b.Property<string>("OperatorFileId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("Id given to the file when uploading files");

                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasComment("Article Id");

                    b.HasKey("Id");

                    b.ToTable("Files", "public", t =>
                        {
                            t.HasComment("File information");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
